[{"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/index.js":"1","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/reportWebVitals.js":"2","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/App.js":"3","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/NotFoundRoute/NotFoundRoute.js":"4","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/AddRecipe/AddRecipeRoute.js":"5","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/RecipeListRoute/RecipeListRoute.js":"6","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/ResgistrationRoute/RegistrationRoute.js":"7","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/RecipeRoute/RecipeRoute.js":"8","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/history.js":"9","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/LandingRoute/LandingRoute.js":"10","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/LoginForm/LoginForm.js":"11","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/Header/Header.js":"12","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RegistrationForm/RegistrationForm.js":"13","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/auth-api-services.js":"14","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/config.js":"15","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/token-services.js":"16","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/recipe-services.js":"17","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/PrivateRoute/PrivateRoute.js":"18","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeList/RecipeList.js":"19","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/instructions-service.js":"20","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/ingredients-services.js":"21","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/tags-service.js":"22","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/recipe_tags-service.js":"23","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeTags/RecipeTags.js":"24","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditRecipe/EditRecipe.js":"25","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/TestRecipeRoute/TestRecipeRoute.js":"26","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditIngredientRoute/EditIngredientRoute.js":"27","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditIngredient/EditIngredient.js":"28","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditInstruction/EditInstruction.js":"29","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditInstructionRoute/EditInstructionRoute.js":"30","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditTitleRoute/EditTitleRoute.js":"31","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditTitle/EditTitle.js":"32","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipePage/RecipePage.js":"33","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/IngredientEditBlock/IngredientEditBlock.js":"34","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/InstructionEditBlock/InstructionEditBlock.js":"35","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/InstructionBlock/InstructionBlock.js":"36","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/IngredientBlock/IngredientBlock.js":"37","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditRecipeRoute/EditRecipeRoute.js":"38","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeEditPage/RecipeEditPage.js":"39","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/AddRecipe/AddRecipe.js":"40","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/Context.js":"41"},{"size":263,"mtime":1609968175820,"results":"42","hashOfConfig":"43"},{"size":362,"mtime":1609958425581,"results":"44","hashOfConfig":"43"},{"size":2231,"mtime":1610479745822,"results":"45","hashOfConfig":"43"},{"size":230,"mtime":1609960068912,"results":"46","hashOfConfig":"43"},{"size":345,"mtime":1610391105640,"results":"47","hashOfConfig":"43"},{"size":2847,"mtime":1610390191000,"results":"48","hashOfConfig":"43"},{"size":638,"mtime":1609973354050,"results":"49","hashOfConfig":"43"},{"size":1940,"mtime":1610386109537,"results":"50","hashOfConfig":"43"},{"size":87,"mtime":1609960239738,"results":"51","hashOfConfig":"43"},{"size":1491,"mtime":1610310985690,"results":"52","hashOfConfig":"43"},{"size":2101,"mtime":1610479686824,"results":"53","hashOfConfig":"43"},{"size":1799,"mtime":1610479967802,"results":"54","hashOfConfig":"43"},{"size":2424,"mtime":1610312039600,"results":"55","hashOfConfig":"43"},{"size":437,"mtime":1609969450839,"results":"56","hashOfConfig":"43"},{"size":176,"mtime":1610478006199,"results":"57","hashOfConfig":"43"},{"size":495,"mtime":1609969453830,"results":"58","hashOfConfig":"43"},{"size":1343,"mtime":1610137349992,"results":"59","hashOfConfig":"43"},{"size":461,"mtime":1610039988676,"results":"60","hashOfConfig":"43"},{"size":402,"mtime":1610387666310,"results":"61","hashOfConfig":"43"},{"size":1033,"mtime":1610239670194,"results":"62","hashOfConfig":"43"},{"size":491,"mtime":1610038048837,"results":"63","hashOfConfig":"43"},{"size":463,"mtime":1610039227967,"results":"64","hashOfConfig":"43"},{"size":896,"mtime":1610120965918,"results":"65","hashOfConfig":"43"},{"size":792,"mtime":1610381649761,"results":"66","hashOfConfig":"43"},{"size":5495,"mtime":1610231578712,"results":"67","hashOfConfig":"43"},{"size":1914,"mtime":1610378518793,"results":"68","hashOfConfig":"43"},{"size":1780,"mtime":1610390166342,"results":"69","hashOfConfig":"43"},{"size":2716,"mtime":1610296325202,"results":"70","hashOfConfig":"43"},{"size":1930,"mtime":1610296956874,"results":"71","hashOfConfig":"43"},{"size":1916,"mtime":1610390202004,"results":"72","hashOfConfig":"43"},{"size":722,"mtime":1610297792966,"results":"73","hashOfConfig":"43"},{"size":1893,"mtime":1610390299747,"results":"74","hashOfConfig":"43"},{"size":3511,"mtime":1610476618237,"results":"75","hashOfConfig":"43"},{"size":638,"mtime":1610382345806,"results":"76","hashOfConfig":"43"},{"size":433,"mtime":1610476394651,"results":"77","hashOfConfig":"43"},{"size":201,"mtime":1610390117058,"results":"78","hashOfConfig":"43"},{"size":388,"mtime":1610390108475,"results":"79","hashOfConfig":"43"},{"size":1933,"mtime":1610379755203,"results":"80","hashOfConfig":"43"},{"size":2546,"mtime":1610476309531,"results":"81","hashOfConfig":"43"},{"size":8563,"mtime":1610470375961,"results":"82","hashOfConfig":"43"},{"size":113,"mtime":1610479239875,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1oc7hha",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/index.js",[],["174","175"],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/reportWebVitals.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/App.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/NotFoundRoute/NotFoundRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/AddRecipe/AddRecipeRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/RecipeListRoute/RecipeListRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/ResgistrationRoute/RegistrationRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/RecipeRoute/RecipeRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/history.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/LandingRoute/LandingRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/LoginForm/LoginForm.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/Header/Header.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RegistrationForm/RegistrationForm.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/auth-api-services.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/config.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/token-services.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/recipe-services.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/PrivateRoute/PrivateRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeList/RecipeList.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/instructions-service.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/ingredients-services.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/tags-service.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/recipe_tags-service.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeTags/RecipeTags.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditRecipe/EditRecipe.js",["176","177","178"],"import React, { Component, useImperativeHandle } from \"react\";\nimport RecipesService from \"../../services/recipe-services\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-services\";\nimport InstructionsService from \"../../services/instructions-service\";\nimport IngredientsService from \"../../services/ingredients-services\";\nimport \"./EditRecipe.css\";\n\nexport default class EditRecipe extends Component {\n  state = {\n    recipe: {},\n    currentInstructions: [],\n    currentIngredients: [],\n  };\n\n  titleRef = React.createRef();\n  step_infoRef = React.createRef();\n  amountRef = React.createRef()\n  unitRef = React.createRef()\n  food_itemRef = React.createRef()\n\n  setTitle = (title) => {\n    this.setState({ title });\n  };\n\n  componentDidMount = () => {\n    RecipesService.getRecipe(this.props.currentRecipeId)\n      .then((recipe) => {\n        this.setState({ recipe });\n      })\n      .then(() => {\n        InstructionsService.getInstructions().then((instructions) => {\n          const currentInstructions = instructions.filter(\n            (instruction) => instruction.recipe_id == this.props.currentRecipeId\n          );\n          this.setState({ currentInstructions });\n        });\n      })\n      .then(() => {\n        IngredientsService.getIngredients().then((ingredients) => {\n          const currentIngredients = ingredients.filter(\n            (ingredient) => ingredient.recipe_id == this.props.currentRecipeId\n          );\n          this.setState({ currentIngredients });\n        });\n      });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const recipeToSubmit = {\n      title: e.target[\"recipe-title\"].value,\n    };\n    //figure out which insrtictions need to be updated\n    //each instructions input element should have a className of \"instruction_step\"\n    //loop through all input elements that have this className\n    //for each input element compare the current info with the prev info\n    //for each changed instruction add an object of instruction_id and info to an array (changedInstructions)\n    //get id from either the input name or the data-attribute\n    //figure out which ingreiednts need to be updated\n    //repeat same but for ingredients\n    //now there are 2 arrays that need to be PATCHED on the backend\n    //for each instruction in the changedInstructions array do a fetch\n    //do same for ingredients\n    const instructionsToSubmit = {\n      step_info: e.target[\"step_info\"].value,\n    };\n    const id = this.props.currentRecipeId;\n    console.log(instructionsToSubmit.id);\n    fetch(`${config.API_ENDPOINT}/recipes/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        authorization: `bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify(recipeToSubmit),\n    })\n      .then((res) =>\n        !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n      )\n      .then(() => {\n        fetch(`${config.API_ENDPOINT}/instructions/${id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"content-type\": \"application/json\",\n            authorization: `bearer ${TokenService.getAuthToken()}`,\n          },\n          body: JSON.stringify(instructionsToSubmit),\n        }).then((res) =>\n          !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n        );\n      })\n      .then(() => {\n        this.props.history.push(`/recipe/${id}`);\n      });\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"recipe-title\">Title:</label>\n          <input\n            key={this.state.recipe.id}\n            type=\"text\"\n            name=\"recipe-title\"\n            ref={this.titleRef}\n            defaultValue={this.state.recipe.title}\n          />\n          <h3>ingredients</h3>\n          {this.state.currentIngredients.map((ingredient) => (\n            <div>\n              <label htmlFor=\"ingredients\"></label>\n              <input\n                className=\"ingredient-inputs\"\n                defaultValue={ingredient.amount}\n                name='ingredient-amount'\n                type=\"text\"\n                ref={this.amountRef}\n              />\n              <label htmlFor=\"unit\"></label>\n              <input\n                className=\"ingredient-inputs\"\n                defaultValue={ingredient.unit}\n                name='ingredient-unit'\n                type=\"text\"\n                ref={this.unitRef}\n              />\n              <label htmlFor=\"food_item\"></label>\n              <input\n                className=\"ingredient-inputs\"\n                defaultValue={ingredient.food_item}\n                name='ingredient-food_item'\n                type=\"text\"\n                ref={this.food_itemRef}\n              />\n            </div>\n          ))}\n          <h3>instructions</h3>\n          {this.state.currentInstructions.map((instruction) => (\n            <div>\n              <label htmlFor=\"instructions\">{instruction.list_order}</label>\n              <input\n                key={instruction.id}\n                defaultValue={instruction.step_info}\n                type=\"text\"\n                name={`instructions_${instruction.id}`}\n                ref={this.step_infoRef}\n                id={`instructions_${instruction.id}`}\n                data-instruction-id={instruction.id}\n              />\n            </div>\n          ))}\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/TestRecipeRoute/TestRecipeRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditIngredientRoute/EditIngredientRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditIngredient/EditIngredient.js",["179"],"import React, { Component } from \"react\";\nimport IngredientsService from \"../../services/ingredients-services\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-services\";\n\nexport default class EditIngredient extends Component {\n  state = {\n    instructionId: \"\",\n    food_item: \"\",\n    amount: \"\",\n    unit: \"\",\n    recipeId: ''\n  };\n\n  componentDidMount = () => {\n    IngredientsService.getIngredients().then((ingredients) => {\n      const currentIngredient = ingredients.find(\n        (ingredient) => ingredient.id == this.props.currentEditId\n      );\n      const instructionId = currentIngredient.id;\n      const food_item = currentIngredient.food_item;\n      const amount = currentIngredient.amount;\n      const unit = currentIngredient.unit;\n      const recipeId = currentIngredient.recipe_id\n      this.setState({ instructionId });\n      this.setState({ food_item });\n      this.setState({ amount });\n      this.setState({ unit });\n      this.setState({recipeId})\n    });\n  };\n\n  handleSubmit = (event) => {\n      event.preventDefault()\n      const id = this.state.instructionId\n      const updatedIngredients = this.state\n      fetch(`${config.API_ENDPOINT}/ingredients/${id}`, {\n          method: 'PATCH',\n          headers: {\n              'content-type': 'application/json',\n              authorization: `bearer ${TokenService.getAuthToken()}`,\n          },\n          body: JSON.stringify(updatedIngredients),\n      }).then((res) => \n          !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n      )\n      .then(() => {\n        this.props.history.push(`/recipe/${this.state.recipeId}`)\n      })\n  }\n\n  setFoodItem = (food_item) => {\n    this.setState({ food_item });\n  };\n  setAmount = (amount) => {\n    this.setState({ amount });\n  };\n  setUnit = (unit) => {\n    this.setState({ unit });\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"amount\">Amount:</label>\n          <input \n            type='text'\n            name='amount'\n            value={this.state.amount}\n            onChange={(e) => this.setAmount(e.target.value)}\n          />\n          <label htmlFor='unit'>Unit:</label>\n          <input\n            type='text'\n            name='unit'\n            value={this.state.unit}\n            onChange={(e) => this.setUnit(e.target.value)}\n          />\n          <label htmlFor='food_item'>Food:</label>\n          <input\n            type='text'\n            name='food_item'\n            value={this.state.food_item}\n            onChange={(e) => this.setFoodItem(e.target.value)}\n          />\n          <button type='submit' >Submit</button>\n      </form>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditInstruction/EditInstruction.js",["180"],"import React, { Component } from \"react\";\nimport InstructionsService from \"../../services/instructions-service\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-services\";\n\nexport default class EditInstruction extends Component {\n  state = {\n    step_info: \"\",\n    recipeId: '',\n    id: ''\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const id = this.props.currentEditId;\n    const updatedInstruction = this.state;\n    fetch(`${config.API_ENDPOINT}/instructions/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        authorization: `bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify(updatedInstruction),\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    )\n    .then(() => {\n      this.props.history.push(`/recipe/${this.state.recipeId}`)\n    })\n  };\n\n  setStepInfo = (step_info) => {\n    this.setState({ step_info });\n    console.log(this.state);\n  };\n\n  componentDidMount = () => {\n    InstructionsService.getInstructions().then((instructions) => {\n      const currentInstruction = instructions.find(\n        (instruction) => instruction.id == this.props.currentEditId\n      );\n      const step_info = currentInstruction.step_info;\n      const recipeId = currentInstruction.recipe_id\n      const id = currentInstruction.id\n      this.setState({ step_info });\n      this.setState({recipeId })\n      this.setState({ id })\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor=\"instruction\">Instruction to edit:</label>\n        <input\n          key={this.state.id}\n          type=\"text\"\n          name=\"instruction_info\"\n          value={this.state.step_info}\n          onChange={(e) => this.setStepInfo(e.target.value)}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditInstructionRoute/EditInstructionRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditTitleRoute/EditTitleRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditTitle/EditTitle.js",["181"],"import React, { Component } from \"react\";\nimport RecipesService from \"../../services/recipe-services\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-services\";\n\nexport default class EditTitle extends Component {\n\n    state= {\n        title: '',\n        id: ''\n    }\n\n    componentDidMount = () => {\n        RecipesService.getRecipes().then((recipes) => {\n            const currentRecipe = recipes.find((recipe) => recipe.id == this.props.currentEditId)\n            const title = currentRecipe.title\n            const id = currentRecipe.id\n            this.setState({title})\n            this.setState({id})\n        })\n    }\n\n    setTitle = (title) => {\n        this.setState({ title })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const id = this.state.id\n        const updatedTitle = this.state\n        console.log(updatedTitle)\n        fetch(`${config.API_ENDPOINT}/recipes/${id}`, {\n            method: \"PATCH\",\n            headers: {\n              \"content-type\": \"application/json\",\n              authorization: `bearer ${TokenService.getAuthToken()}`,\n            },\n            body: JSON.stringify(updatedTitle),\n          })\n            .then((res) =>\n              !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n            )\n            .then(() => {\n                this.props.history.push(`/recipe/${id}`);\n              });\n    }\n\n  render() {\n      console.log(this.state)\n    return (\n        <form onSubmit={this.handleSubmit}>\n            <label htmlFor=\"title\">Title:</label>\n            <input \n                key={this.state.id}\n                type='text'\n                name=\"title\"\n                value={this.state.title}\n                onChange={(e) => this.setTitle(e.target.value)}\n            />\n            <button type='submit'>Submit</button>\n        </form>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipePage/RecipePage.js",["182","183","184"],"import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport InstructionBlock from \"../InstructionBlock/InstructionBlock\";\nimport IngredientBlock from \"../IngredientBlock/IngredientBlock\";\nimport RecipeTags from \"../RecipeTags/RecipeTags\";\nimport config from '../../config'\nimport TokenService from '../../services/token-services'\nimport \"./RecipePage.css\";\n\nexport default class RecipePage extends Component {\n\n  handleDeleteRecipe = (event) => {\n    event.preventDefault();\n    const recipeId = this.props.recipeId\n    fetch(`${config.API_ENDPOINT}/recipes/${recipeId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: `bearer ${TokenService.getAuthToken()}`,\n        'content-type': 'application/json'\n      },\n    })\n    .then((res) => {\n      if (!res.ok) return res.json().then((event = Promise.reject(event)));\n    })\n    .then(() => {\n      this.props.history.push(`/recipe-list`);\n    });\n  }\n\n  render() {\n    console.log(this.props)\n    const recipes = this.props.recipes;\n    const instructions = this.props.instructions;\n    const ingredients = this.props.ingredients;\n    const id = this.props.recipeId;\n    const findRecipe = recipes && recipes.find((recipe) => recipe.id == id);\n    const findInstructions =\n      instructions &&\n      instructions.filter((instruction) => instruction.recipe_id == id);\n\n    const findIngredients =\n      ingredients &&\n      ingredients.filter((ingredient) => ingredient.recipe_id == id);\n\n    const sortedIngredients = findIngredients.sort((a, b) => a.id - b.id)  \n\n    const sortedInstructions = findInstructions.sort((a, b) => a.id - b.id);\n\n    const getInstructions = sortedInstructions.map((instruction, index) => (\n      <InstructionBlock\n        key={index}\n        id={instruction.id}\n        recipe_id={instruction.recipe_id}\n        list_order={instruction.list_order}\n        step_info={instruction.step_info}\n      />\n    ));\n\n    const getIngredients = sortedIngredients.map((ingredient, index) => (\n      <IngredientBlock\n        key={index}\n        id={ingredient.id}\n        food_item={ingredient.food_item}\n        amount={ingredient.amount}\n        recipe_id={ingredient.recipe_id}\n        unit={ingredient.unit}\n      />\n    ));\n\n    if (!findRecipe) {\n      return \"loading\";\n    }\n\n    const formattedDate = moment\n      .utc(findRecipe.date_created)\n      .format(\"MMM Do YYYY\");\n\n    return (\n      <div className=\"recipe-page-div\">\n        <h2 className=\"title-h2\">{findRecipe.title}</h2>\n        <p className=\"date\">Created: {formattedDate}</p>\n        <div className=\"edit-button-div\">\n          <Link\n            to={`/edit-recipe/${this.props.recipeId}`}\n            className=\"recipe-button\"\n          >\n            Edit\n          </Link>\n        </div>\n        <p className=\"ingredient-instruction-title\">Ingredients:</p>\n        <div className=\"ingredients-div\">\n          <ul className=\"ingredients-list\">{getIngredients}</ul>\n        </div>\n        <p className=\"ingredient-instruction-title\">Instructions:</p>\n        <div className=\"instructions-div\">\n          <ol className=\"instructions-list\">{getInstructions}</ol>\n        </div>\n        <div className=\"delete-button-div\">\n          <button className=\"recipe-button\" onClick={this.handleDeleteRecipe}>\n            Delete recipe\n          </button>\n        </div>\n        <div className='recipe-tags-div'>\n        <RecipeTags id={this.props.recipeId} />\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/IngredientEditBlock/IngredientEditBlock.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/InstructionEditBlock/InstructionEditBlock.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/InstructionBlock/InstructionBlock.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/IngredientBlock/IngredientBlock.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditRecipeRoute/EditRecipeRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeEditPage/RecipeEditPage.js",["185","186","187","188"],"import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport InstructionEditBlock from \"../InstructionEditBlock/InstructionEditBlock\";\nimport IngredientEditBlock from \"../IngredientEditBlock/IngredientEditBlock\";\nimport \"./RecipeEditPage.css\";\n\nexport default class Recipe extends Component {\n \n  render() {\n    const recipes = this.props.recipes;\n    const instructions = this.props.instructions;\n    const ingredients = this.props.ingredients;\n    const id = this.props.recipeId;\n    const findRecipe = recipes && recipes.find((recipe) => recipe.id == id);\n    const findInstructions =\n      instructions &&\n      instructions.filter((instruction) => instruction.recipe_id == id);\n    const findIngredients =\n      ingredients &&\n      ingredients.filter((ingredient) => ingredient.recipe_id == id);\n\n      const sortedIngredients = findIngredients.sort((a, b) => a.id - b.id)  \n\n    const sortedInstructions = findInstructions.sort((a, b) => a.id - b.id);\n\n\n    const getInstructions = sortedInstructions.map((instruction, index) => (\n      <InstructionEditBlock\n        key={index}\n        id={instruction.id}\n        recipe_id={instruction.recipe_id}\n        list_order={instruction.list_order}\n        step_info={instruction.step_info}\n      />\n    ));\n\n    const getIngredients = sortedIngredients.map((ingredient, index) => (\n      <IngredientEditBlock\n        key={index}\n        id={ingredient.id}\n        food_item={ingredient.food_item}\n        amount={ingredient.amount}\n        recipe_id={ingredient.recipe_id}\n        unit={ingredient.unit}\n      />\n    ));\n\n    if (!findRecipe) {\n      return \"loading\";\n    }\n\n    return (\n      <div className=\"recipe-page-div\">\n        <p className='edit-message'>Choose which item you would like to edit</p>\n        <div className='edit-button-div'>\n        <h2 className=\"title-h2\">{findRecipe.title}</h2>\n          <Link\n            to={`/edit-title/${this.props.recipeId}`}\n            className=\"recipe-button-edit\"\n          >\n            Edit\n          </Link>\n          </div>\n        <div className=\"ingredients-div\">\n          <ul className=\"ingredients-list\">{getIngredients}</ul>\n        </div>\n        <div className=\"instructions-div\">\n          <ol className=\"instructions-list\">{getInstructions}</ol>\n        </div>\n        <div className=\"delete-button-div\">\n          <Link className=\"recipe-button\" to={`/recipe/${this.props.recipeId}`}>\n            Cancel\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/AddRecipe/AddRecipe.js",["189","190","191"],"import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-services\";\nimport TagsService from '../../services/tags-service'\nimport \"./AddRecipe.css\";\n\nexport default class AddRecipe extends Component {\n  state = {\n    title: \"\",\n    recipe_id: \"\",\n    ingredients: [\n      {\n        unit: \"\",\n        amount: \"\",\n        food_item: \"\",\n      },\n    ],\n    instructions: [\n      {\n        list_order: \"\",\n        step_info: \"\",\n      },\n    ],\n    tags: [\n      {\n        tag_id: '',\n      }\n    ],\n    allTags : []\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let newRecipe = { title: this.state.title };\n    console.log(newRecipe);\n    fetch(`${config.API_ENDPOINT}/recipes`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        authorization: `bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify(newRecipe),\n    })\n      .then((res) =>\n        !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n      )\n      .then((res) => {\n        this.setRecipeId(res.id);\n      })\n      .then(() => {\n        const newIngredients = this.state.ingredients;\n        const recipe_id = this.state.recipe_id;\n\n        newIngredients.map((ingredient) => {\n          ingredient = {...ingredient, recipe_id };\n          console.log(ingredient);\n          fetch(`${config.API_ENDPOINT}/ingredients`, {\n            method: \"POST\",\n            headers: {\n              \"content-type\": \"application/json\",\n              authorization: `bearer ${TokenService.getAuthToken()}`,\n            },\n            body: JSON.stringify(ingredient),\n          }).then((res) =>\n            !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n          )\n          .then(() => {\n            const newInstructions = this.state.instructions;\n            const recipe_id = this.state.recipe_id\n\n            newInstructions.map((instruction) => {\n              instruction = {recipe_id, ...instruction}\n              console.log(instruction)\n              fetch(`${config.API_ENDPOINT}/instructions`, {\n                method: 'POST',\n                headers: {\n                  'content-type': 'application/json',\n                  authorization: `bearer ${TokenService.getAuthToken()}`\n                },\n                body: JSON.stringify(instruction)\n              }).then((res) =>\n              !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n            )\n            })\n          })\n          .then(() => {\n            const newTags = this.state.tags\n            const recipe_id = this.state.recipe_id\n\n            newTags.map((tag) => {\n              tag = {recipe_id, ...tag}\n              console.log(tag)\n              fetch(`${config.API_ENDPOINT}/recipe_tags`, {\n                method: 'POST',\n                headers: {\n                  'content-type': 'application/json',\n                  authorization: `bearer ${TokenService.getAuthToken()}`\n                },\n                body: JSON.stringify(tag)\n              }).then((res) =>\n              !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n            )\n            })\n          })\n          .then(() => {\n            this.props.history.push(`/recipe/${this.state.recipe_id}`);\n          });\n        });\n      });\n  };\n\n  titleChanged = (title) => {\n    this.setState({ title });\n    console.log(this.state);\n  };\n\n  setRecipeId = (recipe_id) => {\n    this.setState({ recipe_id });\n  };\n\n  updateIngredient = (e, index) => {\n    const newIngredients = [...this.state.ingredients];\n    newIngredients[index] = {\n      ...newIngredients[index],\n      [e.target.name]: e.target.value,\n    };\n    this.setState({ ingredients: newIngredients });\n  };\n\n  updateInstruction = (e, index) => {\n    const newInstructions = [...this.state.instructions];\n    newInstructions[index] = {\n      ...newInstructions[index],\n      [e.target.name]: e.target.value,\n    };\n    this.setState({ instructions: newInstructions });\n  };\n\n  updateTags = (e, index) => {\n    const newTags = [...this.state.tags]\n    newTags[index] = {\n      ...newTags[index],\n      [e.target.name]: e.target.id,\n    }\n    this.setState({tags: newTags})\n  }\n\n  componentDidMount = () => {\n    TagsService.getTags()\n      .then((allTags) => {\n        this.setState({allTags})\n      })\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <form onSubmit={this.handleSubmit} className=\"add-new-form\">\n        <label htmlFor=\"title\">\n          Title:\n          <input\n            type=\"text\"\n            placeholder=\"title\"\n            value={this.state.title}\n            onChange={(e) => this.titleChanged(e.target.value)}\n          />\n        </label>\n        <h2>Ingredients</h2>\n        {this.state.ingredients.map((ingredient, index) => (\n          <div>\n            <label htmlFor=\"amount\">\n              Amount:\n              <input\n                type=\"number\"\n                placeholder=\"amount\"\n                name=\"amount\"\n                id=\"amount\"\n                // value={ingredient.amount}\n                onChange={(e) => this.updateIngredient(e, index)}\n              />\n            </label>\n            <label htmlFor=\"units\">\n              Unit:\n              <select\n                name=\"unit\"\n                id=\"unit\"\n                onChange={(e) => this.updateIngredient(e, index)}\n              >\n                <option  selected disabled='disabled'>Choose Unit</option>\n                <option name=\"tbs\" value=\"tbs\">\n                  tbs\n                </option>\n                <option name=\"tsp\" value=\"tsp\">\n                  tsp\n                </option>\n                <option name=\"cup\" value=\"cup\">\n                  cup\n                </option>\n                <option name=\"cups\" value=\"cups\">\n                  cups\n                </option>\n                <option name=\"quart\" value=\"quart\">\n                  quart\n                </option>\n                <option name=\"quarts\" value=\"quarts\">\n                  quarts\n                </option>\n                <option name=\"lb\" value=\"lb\">\n                  lb\n                </option>\n                <option name=\"lbs\" value=\"lbs\">\n                  lbs\n                </option>\n                <option name=\"oz\" value=\"oz\">\n                  oz\n                </option>\n                <option name=\"ml\" value=\"ml\">\n                  ml\n                </option>\n                <option name=\"gram\" value=\"gram\">\n                  gram\n                </option>\n                <option name=\"grams\" value=\"grams\">\n                  grams\n                </option>\n              </select>\n            </label>\n            <label htmlFor=\"ingredient\">\n              Ingredient:\n              <input\n                name=\"food_item\"\n                type=\"text\"\n                placeholder=\"ingredient\"\n                onChange={(e) => this.updateIngredient(e, index)}\n              />\n            </label>\n          </div>\n        ))}\n        <button\n          type=\"button\"\n          onClick={() =>\n            this.setState({ ingredients: [...this.state.ingredients, \"\"] })\n          }\n        >\n          Add Ingredient\n        </button>\n        <h2>Instructions</h2>\n        {this.state.instructions.map((instruction, index) => (\n          <div>\n            <label>\n              Step Number\n              <input\n                type=\"text\"\n                placeholder=\"Step number\"\n                name=\"list_order\"\n                id=\"list_order\"\n                onChange={(e) => this.updateInstruction(e, index)}\n              />\n            </label>\n            <label>\n              Instruction\n              <input\n                type=\"text\"\n                placeholder=\"instruction\"\n                name=\"step_info\"\n                id=\"step_info\"\n                onChange={(e) => this.updateInstruction(e, index)}\n              />\n            </label>\n          </div>\n        ))}\n        <button\n          type=\"button\"\n          onClick={() =>\n            this.setState({ instructions: [...this.state.instructions, \"\"] })\n          }\n        >\n          Add Ingredient\n        </button>\n        <h2>Tags</h2>\n        {this.state.allTags.map((tag, index) => (\n          <div>\n            <input type='checkbox' id={tag.id} name='tag_id' onChange={(e) => this.updateTags(e, index)}/>\n            <label>{tag.tag_name}</label>\n          </div>\n        ))}\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/Context.js",[],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":1,"column":28,"nodeType":"198","messageId":"199","endLine":1,"endColumn":47},{"ruleId":"200","severity":1,"message":"201","line":34,"column":52,"nodeType":"202","messageId":"203","endLine":34,"endColumn":54},{"ruleId":"200","severity":1,"message":"201","line":42,"column":50,"nodeType":"202","messageId":"203","endLine":42,"endColumn":52},{"ruleId":"200","severity":1,"message":"201","line":18,"column":39,"nodeType":"202","messageId":"203","endLine":18,"endColumn":41},{"ruleId":"200","severity":1,"message":"201","line":40,"column":41,"nodeType":"202","messageId":"203","endLine":40,"endColumn":43},{"ruleId":"200","severity":1,"message":"201","line":15,"column":70,"nodeType":"202","messageId":"203","endLine":15,"endColumn":72},{"ruleId":"200","severity":1,"message":"201","line":37,"column":70,"nodeType":"202","messageId":"203","endLine":37,"endColumn":72},{"ruleId":"200","severity":1,"message":"201","line":40,"column":66,"nodeType":"202","messageId":"203","endLine":40,"endColumn":68},{"ruleId":"200","severity":1,"message":"201","line":44,"column":63,"nodeType":"202","messageId":"203","endLine":44,"endColumn":65},{"ruleId":"196","severity":1,"message":"204","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":14},{"ruleId":"200","severity":1,"message":"201","line":15,"column":70,"nodeType":"202","messageId":"203","endLine":15,"endColumn":72},{"ruleId":"200","severity":1,"message":"201","line":18,"column":66,"nodeType":"202","messageId":"203","endLine":18,"endColumn":68},{"ruleId":"200","severity":1,"message":"201","line":21,"column":63,"nodeType":"202","messageId":"203","endLine":21,"endColumn":65},{"ruleId":"205","severity":1,"message":"206","line":54,"column":41,"nodeType":"207","messageId":"208","endLine":54,"endColumn":43},{"ruleId":"205","severity":1,"message":"206","line":71,"column":47,"nodeType":"207","messageId":"208","endLine":71,"endColumn":49},{"ruleId":"205","severity":1,"message":"206","line":90,"column":31,"nodeType":"207","messageId":"208","endLine":90,"endColumn":33},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"no-unused-vars","'useImperativeHandle' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'moment' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]