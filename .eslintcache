[{"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/index.js":"1","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/reportWebVitals.js":"2","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/App.js":"3","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/NotFoundRoute/NotFoundRoute.js":"4","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/AddRecipe/AddRecipeRoute.js":"5","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/RecipeListRoute/RecipeListRoute.js":"6","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/ResgistrationRoute/RegistrationRoute.js":"7","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/RecipeRoute/RecipeRoute.js":"8","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/history.js":"9","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/LandingRoute/LandingRoute.js":"10","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/LoginForm/LoginForm.js":"11","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/Header/Header.js":"12","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RegistrationForm/RegistrationForm.js":"13","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/auth-api-services.js":"14","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/config.js":"15","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/token-services.js":"16","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/recipe-services.js":"17","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/PrivateRoute/PrivateRoute.js":"18","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeList/RecipeList.js":"19","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/instructions-service.js":"20","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/ingredients-services.js":"21","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/tags-service.js":"22","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/recipe_tags-service.js":"23","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeTags/RecipeTags.js":"24","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/TestRecipeRoute/TestRecipeRoute.js":"25","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditIngredientRoute/EditIngredientRoute.js":"26","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditIngredient/EditIngredient.js":"27","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditInstruction/EditInstruction.js":"28","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditInstructionRoute/EditInstructionRoute.js":"29","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditTitleRoute/EditTitleRoute.js":"30","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditTitle/EditTitle.js":"31","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipePage/RecipePage.js":"32","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/IngredientEditBlock/IngredientEditBlock.js":"33","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/InstructionEditBlock/InstructionEditBlock.js":"34","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/InstructionBlock/InstructionBlock.js":"35","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/IngredientBlock/IngredientBlock.js":"36","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditRecipeRoute/EditRecipeRoute.js":"37","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeEditPage/RecipeEditPage.js":"38","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/AddRecipe/AddRecipe.js":"39","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/Context.js":"40"},{"size":263,"mtime":1610831476878,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":1609958425581,"results":"43","hashOfConfig":"42"},{"size":2236,"mtime":1610830819996,"results":"44","hashOfConfig":"42"},{"size":313,"mtime":1610750338674,"results":"45","hashOfConfig":"42"},{"size":398,"mtime":1610749894266,"results":"46","hashOfConfig":"42"},{"size":2792,"mtime":1610746705907,"results":"47","hashOfConfig":"42"},{"size":638,"mtime":1609973354050,"results":"48","hashOfConfig":"42"},{"size":1940,"mtime":1610386109537,"results":"49","hashOfConfig":"42"},{"size":87,"mtime":1609960239738,"results":"50","hashOfConfig":"42"},{"size":1491,"mtime":1610310985690,"results":"51","hashOfConfig":"42"},{"size":2101,"mtime":1610479686824,"results":"52","hashOfConfig":"42"},{"size":1109,"mtime":1610827385478,"results":"53","hashOfConfig":"42"},{"size":2484,"mtime":1610660439870,"results":"54","hashOfConfig":"42"},{"size":437,"mtime":1609969450839,"results":"55","hashOfConfig":"42"},{"size":247,"mtime":1610742469434,"results":"56","hashOfConfig":"42"},{"size":495,"mtime":1609969453830,"results":"57","hashOfConfig":"42"},{"size":1343,"mtime":1610137349992,"results":"58","hashOfConfig":"42"},{"size":568,"mtime":1610832067415,"results":"59","hashOfConfig":"42"},{"size":382,"mtime":1610748480465,"results":"60","hashOfConfig":"42"},{"size":1033,"mtime":1610239670194,"results":"61","hashOfConfig":"42"},{"size":491,"mtime":1610038048837,"results":"62","hashOfConfig":"42"},{"size":463,"mtime":1610039227967,"results":"63","hashOfConfig":"42"},{"size":896,"mtime":1610120965918,"results":"64","hashOfConfig":"42"},{"size":1008,"mtime":1610660435951,"results":"65","hashOfConfig":"42"},{"size":1914,"mtime":1610378518793,"results":"66","hashOfConfig":"42"},{"size":1531,"mtime":1610660480926,"results":"67","hashOfConfig":"42"},{"size":3266,"mtime":1610660402401,"results":"68","hashOfConfig":"42"},{"size":2299,"mtime":1610660406408,"results":"69","hashOfConfig":"42"},{"size":1723,"mtime":1610660491717,"results":"70","hashOfConfig":"42"},{"size":722,"mtime":1610297792966,"results":"71","hashOfConfig":"42"},{"size":2126,"mtime":1610660427075,"results":"72","hashOfConfig":"42"},{"size":3537,"mtime":1610823486908,"results":"73","hashOfConfig":"42"},{"size":638,"mtime":1610382345806,"results":"74","hashOfConfig":"42"},{"size":433,"mtime":1610476394651,"results":"75","hashOfConfig":"42"},{"size":201,"mtime":1610390117058,"results":"76","hashOfConfig":"42"},{"size":388,"mtime":1610390108475,"results":"77","hashOfConfig":"42"},{"size":1933,"mtime":1610379755203,"results":"78","hashOfConfig":"42"},{"size":2512,"mtime":1610827109016,"results":"79","hashOfConfig":"42"},{"size":9397,"mtime":1610751358417,"results":"80","hashOfConfig":"42"},{"size":113,"mtime":1610479239875,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oc7hha",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/index.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/reportWebVitals.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/App.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/NotFoundRoute/NotFoundRoute.js",[],["169","170"],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/AddRecipe/AddRecipeRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/RecipeListRoute/RecipeListRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/ResgistrationRoute/RegistrationRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/RecipeRoute/RecipeRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/history.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/LandingRoute/LandingRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/LoginForm/LoginForm.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/Header/Header.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RegistrationForm/RegistrationForm.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/auth-api-services.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/config.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/token-services.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/recipe-services.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/PrivateRoute/PrivateRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeList/RecipeList.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/instructions-service.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/ingredients-services.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/tags-service.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/recipe_tags-service.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeTags/RecipeTags.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/TestRecipeRoute/TestRecipeRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditIngredientRoute/EditIngredientRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditIngredient/EditIngredient.js",["171"],"import React, { Component } from \"react\";\nimport IngredientsService from \"../../services/ingredients-services\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-services\";\n\nexport default class EditIngredient extends Component {\n  state = {\n    instructionId: \"\",\n    food_item: \"\",\n    amount: \"\",\n    unit: \"\",\n    recipeId: ''\n  };\n\n  componentDidMount = () => {\n    IngredientsService.getIngredients().then((ingredients) => {\n      const currentIngredient = ingredients.find(\n        (ingredient) => ingredient.id == this.props.currentEditId\n      );\n      const instructionId = currentIngredient.id;\n      const food_item = currentIngredient.food_item;\n      const amount = currentIngredient.amount;\n      const unit = currentIngredient.unit;\n      const recipeId = currentIngredient.recipe_id\n      this.setState({ instructionId });\n      this.setState({ food_item });\n      this.setState({ amount });\n      this.setState({ unit });\n      this.setState({recipeId})\n    });\n  };\n\n  handleSubmit = (event) => {\n      event.preventDefault()\n      const id = this.state.instructionId\n      const updatedIngredients = this.state\n      fetch(`${config.API_ENDPOINT}/ingredients/${id}`, {\n          method: 'PATCH',\n          headers: {\n              'content-type': 'application/json',\n              authorization: `bearer ${TokenService.getAuthToken()}`,\n          },\n          body: JSON.stringify(updatedIngredients),\n      }).then((res) => \n          !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n      )\n      .then(() => {\n        this.props.history.push(`/recipe/${this.state.recipeId}`)\n      })\n  }\n\n  setFoodItem = (food_item) => {\n    this.setState({ food_item });\n  };\n  setAmount = (amount) => {\n    this.setState({ amount });\n  };\n  setUnit = (unit) => {\n    this.setState({ unit });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"editing-forms\">\n          <label htmlFor=\"amount\" className=\"editing-labels\">Amount:</label>\n          <input \n            type='text'\n            name='amount'\n            value={this.state.amount}\n            onChange={(e) => this.setAmount(e.target.value)}\n            className='ingredients-inputs'\n          />\n          \n          <label htmlFor='unit' className=\"editing-labels\">Unit:</label>\n          <input\n            type='text'\n            name='unit'\n            value={this.state.unit}\n            onChange={(e) => this.setUnit(e.target.value)}\n            className='ingredients-inputs'\n          />\n          \n          <label htmlFor='food_item' className=\"editing-labels\">Food:</label>\n          <input\n            type='text'\n            name='food_item'\n            value={this.state.food_item}\n            onChange={(e) => this.setFoodItem(e.target.value)}\n            className='ingredients-inputs'\n          />\n        \n          <div className=\"button-div\">\n          <button className=\"editing-buttons\" type='submit' >Submit</button>\n          <button\n            className=\"editing-buttons\"\n            onClick={(e) =>\n              this.props.history.push(`/edit-recipe/${this.state.recipeId}`)\n            }\n          >\n            Cancel\n          </button>\n          </div>\n      </form>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditInstruction/EditInstruction.js",["172"],"import React, { Component } from \"react\";\nimport InstructionsService from \"../../services/instructions-service\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-services\";\n\nexport default class EditInstruction extends Component {\n  state = {\n    step_info: \"\",\n    recipeId: '',\n    id: ''\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const id = this.props.currentEditId;\n    const updatedInstruction = this.state;\n    fetch(`${config.API_ENDPOINT}/instructions/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        authorization: `bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify(updatedInstruction),\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    )\n    .then(() => {\n      this.props.history.push(`/recipe/${this.state.recipeId}`)\n    })\n  };\n\n  setStepInfo = (step_info) => {\n    this.setState({ step_info });\n  };\n\n  componentDidMount = () => {\n    InstructionsService.getInstructions().then((instructions) => {\n      const currentInstruction = instructions.find(\n        (instruction) => instruction.id == this.props.currentEditId\n      );\n      const step_info = currentInstruction.step_info;\n      const recipeId = currentInstruction.recipe_id\n      const id = currentInstruction.id\n      this.setState({ step_info });\n      this.setState({recipeId })\n      this.setState({ id })\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"editing-forms\">\n        <label htmlFor=\"instruction\" className=\"editing-labels\">Instruction:</label>\n        <textarea\n          key={this.state.id}\n          type=\"text\"\n          name=\"instruction_info\"\n          value={this.state.step_info}\n          onChange={(e) => this.setStepInfo(e.target.value)}\n          className='instructions-inputs'\n        />\n        <div className=\"button-div\">\n        <button className=\"editing-buttons\" type=\"submit\">Submit</button>\n        <button\n            className=\"editing-buttons\"\n            onClick={(e) =>\n              this.props.history.push(`/edit-recipe/${this.state.recipeId}`)\n            }\n          >\n            Cancel\n          </button>\n          </div>\n      </form>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditInstructionRoute/EditInstructionRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditTitleRoute/EditTitleRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditTitle/EditTitle.js",["173"],"import React, { Component } from \"react\";\nimport RecipesService from \"../../services/recipe-services\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-services\";\nimport \"./EditTitle.css\";\n\nexport default class EditTitle extends Component {\n  state = {\n    title: \"\",\n    id: \"\",\n  };\n\n  componentDidMount = () => {\n    RecipesService.getRecipes().then((recipes) => {\n      const currentRecipe = recipes.find(\n        (recipe) => recipe.id == this.props.currentEditId\n      );\n      const title = currentRecipe.title;\n      const id = currentRecipe.id;\n      this.setState({ title });\n      this.setState({ id });\n    });\n  };\n\n  setTitle = (title) => {\n    this.setState({ title });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const id = this.state.id;\n    const updatedTitle = this.state;\n    fetch(`${config.API_ENDPOINT}/recipes/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        authorization: `bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify(updatedTitle),\n    })\n      .then((res) =>\n        !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n      )\n      .then(() => {\n        this.props.history.push(`/recipe/${id}`);\n      });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"editing-forms\">\n        <label htmlFor=\"title\" className=\"editing-labels\">\n          Title:\n          <input\n            key={this.state.id}\n            type=\"text\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={(e) => this.setTitle(e.target.value)}\n            className=\"title-input\"\n          />\n        </label>\n        <div className=\"button-div\">\n          <button type=\"submit\" className=\"editing-buttons\">\n            Submit\n          </button>\n          <button\n            className=\"editing-buttons\"\n            onClick={(e) =>\n              this.props.history.push(`/edit-recipe/${this.state.id}`)\n            }\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipePage/RecipePage.js",["174","175","176"],"import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport InstructionBlock from \"../InstructionBlock/InstructionBlock\";\nimport IngredientBlock from \"../IngredientBlock/IngredientBlock\";\nimport RecipeTags from \"../RecipeTags/RecipeTags\";\nimport config from '../../config'\nimport TokenService from '../../services/token-services'\nimport \"./RecipePage.css\";\n\nexport default class RecipePage extends Component {\n\n  handleDeleteRecipe = (event) => {\n    event.preventDefault();\n    const recipeId = this.props.recipeId\n    fetch(`${config.API_ENDPOINT}/recipes/${recipeId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: `bearer ${TokenService.getAuthToken()}`,\n        'content-type': 'application/json'\n      },\n    })\n    .then((res) => {\n      if (!res.ok) return res.json().then((event = Promise.reject(event)));\n    })\n    .then(() => {\n      this.props.history.push(`/recipe-list`);\n    });\n  }\n\n  render() {\n    const recipes = this.props.recipes;\n    const instructions = this.props.instructions;\n    const ingredients = this.props.ingredients;\n    const id = this.props.recipeId;\n    const findRecipe = recipes && recipes.find((recipe) => recipe.id == id);\n    const findInstructions =\n      instructions &&\n      instructions.filter((instruction) => instruction.recipe_id == id);\n\n    const findIngredients =\n      ingredients &&\n      ingredients.filter((ingredient) => ingredient.recipe_id == id);\n\n    const sortedIngredients = findIngredients.sort((a, b) => a.id - b.id)  \n\n    const sortedInstructions = findInstructions.sort((a, b) => a.id - b.id);\n\n    const getInstructions = sortedInstructions.map((instruction, index) => (\n      <InstructionBlock\n        key={index}\n        id={instruction.id}\n        recipe_id={instruction.recipe_id}\n        list_order={instruction.list_order}\n        step_info={instruction.step_info}\n      />\n    ));\n\n    const getIngredients = sortedIngredients.map((ingredient, index) => (\n      <IngredientBlock\n        key={index}\n        id={ingredient.id}\n        food_item={ingredient.food_item}\n        amount={ingredient.amount}\n        recipe_id={ingredient.recipe_id}\n        unit={ingredient.unit}\n      />\n    ));\n\n    if (!findRecipe) {\n      return \"loading\";\n    }\n\n    const formattedDate = moment\n      .utc(findRecipe.date_created)\n      .format(\"MMM Do YYYY\");\n\n    return (\n      <div className=\"recipe-page-div\">\n        <div className=\"title-div\">\n        <h2 className=\"title-h2\">{findRecipe.title}</h2>\n        <Link\n            to={`/edit-recipe/${this.props.recipeId}`}\n            className=\"edit-recipe-button\"\n          >\n            Edit\n          </Link>\n        </div>\n        <p className=\"date\">Created: {formattedDate}</p>\n        <div className=\"edit-button-div\">\n        </div>\n        <p className=\"ingredient-instruction-title\">Ingredients:</p>\n        <div className=\"ingredients-div\">\n          <ul className=\"ingredients-list\">{getIngredients}</ul>\n        </div>\n        <p className=\"ingredient-instruction-title\">Instructions:</p>\n        <div className=\"instructions-div\">\n          <ol className=\"instructions-list\">{getInstructions}</ol>\n        </div>\n        <div className=\"delete-button-div\">\n          <button className=\"recipe-button\" onClick={this.handleDeleteRecipe}>\n            Delete recipe\n          </button>\n        </div>\n        <div className='recipe-tags-div'>\n        <RecipeTags id={this.props.recipeId} />\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/IngredientEditBlock/IngredientEditBlock.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/InstructionEditBlock/InstructionEditBlock.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/InstructionBlock/InstructionBlock.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/IngredientBlock/IngredientBlock.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditRecipeRoute/EditRecipeRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeEditPage/RecipeEditPage.js",["177","178","179"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport InstructionEditBlock from \"../InstructionEditBlock/InstructionEditBlock\";\nimport IngredientEditBlock from \"../IngredientEditBlock/IngredientEditBlock\";\nimport \"./RecipeEditPage.css\";\n\nexport default class Recipe extends Component {\n\n  render() {\n    const recipes = this.props.recipes;\n    const instructions = this.props.instructions;\n    const ingredients = this.props.ingredients;\n    const id = this.props.recipeId;\n    const findRecipe = recipes && recipes.find((recipe) => recipe.id == id);\n    const findInstructions =\n      instructions &&\n      instructions.filter((instruction) => instruction.recipe_id == id);\n    const findIngredients =\n      ingredients &&\n      ingredients.filter((ingredient) => ingredient.recipe_id == id);\n\n    const sortedIngredients = findIngredients.sort((a, b) => a.id - b.id);\n\n    const sortedInstructions = findInstructions.sort((a, b) => a.id - b.id);\n\n    const getInstructions = sortedInstructions.map((instruction, index) => (\n      <InstructionEditBlock\n        key={index}\n        id={instruction.id}\n        recipe_id={instruction.recipe_id}\n        list_order={instruction.list_order}\n        step_info={instruction.step_info}\n      />\n    ));\n\n    const getIngredients = sortedIngredients.map((ingredient, index) => (\n      <IngredientEditBlock\n        key={index}\n        id={ingredient.id}\n        food_item={ingredient.food_item}\n        amount={ingredient.amount}\n        recipe_id={ingredient.recipe_id}\n        unit={ingredient.unit}\n      />\n    ));\n\n    if (!findRecipe) {\n      return \"loading\";\n    }\n\n    return (\n      <div className=\"recipe-page-div\">\n        <p className=\"edit-message\">Choose which item you would like to edit</p>\n        <div className=\"edit-button-div\">\n          <h2 className=\"title-h2\">{findRecipe.title}</h2>\n          <Link\n            to={`/edit-title/${this.props.recipeId}`}\n            className=\"edit-recipe-button\"\n          >\n            Edit\n          </Link>\n        </div>\n        <div className=\"ingredients-div\">\n          <ul className=\"ingredients-list\">{getIngredients}</ul>\n        </div>\n        <div className=\"instructions-div\">\n          <ol className=\"instructions-list\">{getInstructions}</ol>\n        </div>\n        <div className=\"delete-button-div\">\n          <Link className=\"recipe-button\" to={`/recipe/${this.props.recipeId}`}>\n            Cancel\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/AddRecipe/AddRecipe.js",["180","181"],"import React, { Component } from \"react\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-services\";\nimport TagsService from \"../../services/tags-service\";\nimport \"./AddRecipe.css\";\n\nexport default class AddRecipe extends Component {\n  state = {\n    title: \"\",\n    recipe_id: \"\",\n    ingredients: [\n      {\n        unit: \"\",\n        amount: \"\",\n        food_item: \"\",\n      },\n    ],\n    instructions: [\n      {\n        list_order: \"\",\n        step_info: \"\",\n      },\n    ],\n    tag_id: \"\",\n\n    allTags: [],\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let newRecipe = { title: this.state.title };\n    fetch(`${config.API_ENDPOINT}/recipes`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        authorization: `bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify(newRecipe),\n    })\n      .then((res) =>\n        !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n      )\n      .then((res) => {\n        this.setRecipeId(res.id);\n      })\n      .then(() => {\n        const newIngredients = this.state.ingredients;\n        const recipe_id = this.state.recipe_id;\n\n        newIngredients.map((ingredient) => {\n          ingredient = { ...ingredient, recipe_id };\n          fetch(`${config.API_ENDPOINT}/ingredients`, {\n            method: \"POST\",\n            headers: {\n              \"content-type\": \"application/json\",\n              authorization: `bearer ${TokenService.getAuthToken()}`,\n            },\n            body: JSON.stringify(ingredient),\n          }).then((res) =>\n            !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n          );\n        });\n      })\n      .then(() => {\n        const newInstructions = this.state.instructions;\n        const recipe_id = this.state.recipe_id;\n\n        newInstructions.map((instruction) => {\n          instruction = { recipe_id, ...instruction };\n          fetch(`${config.API_ENDPOINT}/instructions`, {\n            method: \"POST\",\n            headers: {\n              \"content-type\": \"application/json\",\n              authorization: `bearer ${TokenService.getAuthToken()}`,\n            },\n            body: JSON.stringify(instruction),\n          }).then((res) =>\n            !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n          );\n        });\n      })\n      .then(() => {\n        const tag = this.state.tag_id;\n        const recipe_id = this.state.recipe_id;\n        const tagWithId = { recipe_id, tag_id: tag };\n        console.log(tagWithId);\n\n        fetch(`${config.API_ENDPOINT}/recipe_tags`, {\n          method: \"POST\",\n          headers: {\n            \"content-type\": \"application/json\",\n            authorization: `bearer ${TokenService.getAuthToken()}`,\n          },\n          body: JSON.stringify(tagWithId),\n        }).then((res) =>\n          !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n        );\n      })\n      .then(() => {\n        this.props.history.push(`/recipe/${this.state.recipe_id}`);\n      });\n  };\n\n  titleChanged = (title) => {\n    this.setState({ title });\n  };\n\n  setRecipeId = (recipe_id) => {\n    this.setState({ recipe_id });\n  };\n\n  updateIngredient = (e, index) => {\n    const newIngredients = [...this.state.ingredients];\n    newIngredients[index] = {\n      ...newIngredients[index],\n      [e.target.name]: e.target.value,\n    };\n    this.setState({ ingredients: newIngredients });\n  };\n\n  updateInstruction = (e, index) => {\n    const newInstructions = [...this.state.instructions];\n    newInstructions[index] = {\n      ...newInstructions[index],\n      [e.target.name]: e.target.value,\n    };\n    this.setState({ instructions: newInstructions });\n  };\n\n  updateTags = (e) => {\n    this.setState({\n      tag_id: e.target.id,\n    });\n  };\n\n  componentDidMount = () => {\n    TagsService.getTags().then((allTags) => {\n      this.setState({ allTags });\n    });\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <form onSubmit={this.handleSubmit} className=\"add-new-form\">\n        <div className=\"title-add-div\">\n          <h2>Title</h2>\n          <label htmlFor=\"title\" className=\"labels\">\n            Title:\n            <input\n              required\n              className=\"add-inputs\"\n              type=\"text\"\n              placeholder=\"title\"\n              value={this.state.title}\n              onChange={(e) => this.titleChanged(e.target.value)}\n            />\n          </label>\n        </div>\n        <div className=\"ingredients-form\">\n          <h2>Ingredients</h2>\n          {this.state.ingredients.map((ingredient, index) => (\n            <div\n              className=\"ingredients-form-divide\"\n              key={`ingredients ${index}`}\n            >\n              <label htmlFor=\"amount\" className=\"labels\">\n                Amount:\n                <input\n                  required\n                  step=\".01\"\n                  className=\"add-inputs\"\n                  type=\"number\"\n                  placeholder=\"amount\"\n                  name=\"amount\"\n                  id=\"amount\"\n                  onChange={(e) => this.updateIngredient(e, index)}\n                />\n              </label>\n              <label htmlFor=\"units\" className=\"labels\">\n                Unit:\n                <select\n                  required\n                  name=\"unit\"\n                  id=\"unit\"\n                  onChange={(e) => this.updateIngredient(e, index)}\n                  className=\"select\"\n                >\n                  <option hidden={true} value=\"\">\n                    Choose Unit\n                  </option>\n                  <option name=\"tbs\" value=\"tbs\">\n                    tbs\n                  </option>\n                  <option name=\"tsp\" value=\"tsp\">\n                    tsp\n                  </option>\n                  <option name=\"cup\" value=\"cup\">\n                    cup\n                  </option>\n                  <option name=\"cups\" value=\"cups\">\n                    cups\n                  </option>\n                  <option name=\"quart\" value=\"quart\">\n                    quart\n                  </option>\n                  <option name=\"quarts\" value=\"quarts\">\n                    quarts\n                  </option>\n                  <option name=\"lb\" value=\"lb\">\n                    lb\n                  </option>\n                  <option name=\"lbs\" value=\"lbs\">\n                    lbs\n                  </option>\n                  <option name=\"oz\" value=\"oz\">\n                    oz\n                  </option>\n                  <option name=\"ml\" value=\"ml\">\n                    ml\n                  </option>\n                  <option name=\"gram\" value=\"gram\">\n                    gram\n                  </option>\n                  <option name=\"grams\" value=\"grams\">\n                    grams\n                  </option>\n                </select>\n              </label>\n              <label htmlFor=\"ingredient\" className=\"labels\">\n                Ingredient:\n                <input\n                  required\n                  className=\"add-inputs\"\n                  name=\"food_item\"\n                  type=\"text\"\n                  placeholder=\"ingredient\"\n                  onChange={(e) => this.updateIngredient(e, index)}\n                />\n              </label>\n            </div>\n          ))}\n        </div>\n        <button\n          type=\"button\"\n          onClick={() =>\n            this.setState({ ingredients: [...this.state.ingredients, \"\"] })\n          }\n        >\n          Add Another Ingredient\n        </button>\n        <div className=\"instructions-form\">\n          <h2>Instructions</h2>\n          {this.state.instructions.map((instruction, index) => (\n            <div\n              className=\"ingredients-form-divide\"\n              key={`instructions ${index}`}\n            >\n              <label className=\"labels\">\n                Step Number\n                <input\n                  required\n                  type=\"text\"\n                  placeholder=\"Step number\"\n                  name=\"list_order\"\n                  id=\"list_order\"\n                  onChange={(e) => this.updateInstruction(e, index)}\n                />\n              </label>\n              <label className=\"labels\">\n                Instruction\n                <textarea\n                  className=\"text-area\"\n                  type=\"text\"\n                  placeholder=\"instruction\"\n                  name=\"step_info\"\n                  id=\"step_info\"\n                  onChange={(e) => this.updateInstruction(e, index)}\n                />\n              </label>\n            </div>\n          ))}\n        </div>\n        <button\n          type=\"button\"\n          onClick={() =>\n            this.setState({ instructions: [...this.state.instructions, \"\"] })\n          }\n        >\n          Add Another Instruction\n        </button>\n        <div className=\"tags-form\">\n          <h2>Tags</h2>\n          {this.state.allTags.map((tag, index) => (\n            <div key={tag.id} required>\n              <input\n                required\n                type=\"radio\"\n                id={tag.id}\n                name=\"tags\"\n                onChange={(e) => this.updateTags(e)}\n              />\n              <label htmlFor=\"tags\">{tag.tag_name}</label>\n            </div>\n          ))}\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/Context.js",[],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":18,"column":39,"nodeType":"188","messageId":"189","endLine":18,"endColumn":41},{"ruleId":"186","severity":1,"message":"187","line":39,"column":41,"nodeType":"188","messageId":"189","endLine":39,"endColumn":43},{"ruleId":"186","severity":1,"message":"187","line":16,"column":31,"nodeType":"188","messageId":"189","endLine":16,"endColumn":33},{"ruleId":"186","severity":1,"message":"187","line":36,"column":70,"nodeType":"188","messageId":"189","endLine":36,"endColumn":72},{"ruleId":"186","severity":1,"message":"187","line":39,"column":66,"nodeType":"188","messageId":"189","endLine":39,"endColumn":68},{"ruleId":"186","severity":1,"message":"187","line":43,"column":63,"nodeType":"188","messageId":"189","endLine":43,"endColumn":65},{"ruleId":"186","severity":1,"message":"187","line":14,"column":70,"nodeType":"188","messageId":"189","endLine":14,"endColumn":72},{"ruleId":"186","severity":1,"message":"187","line":17,"column":66,"nodeType":"188","messageId":"189","endLine":17,"endColumn":68},{"ruleId":"186","severity":1,"message":"187","line":20,"column":63,"nodeType":"188","messageId":"189","endLine":20,"endColumn":65},{"ruleId":"190","severity":1,"message":"191","line":50,"column":41,"nodeType":"192","messageId":"193","endLine":50,"endColumn":43},{"ruleId":"190","severity":1,"message":"191","line":68,"column":43,"nodeType":"192","messageId":"193","endLine":68,"endColumn":45},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]