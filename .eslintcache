[{"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/index.js":"1","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/reportWebVitals.js":"2","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/App.js":"3","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/NotFoundRoute/NotFoundRoute.js":"4","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/AddRecipe/AddRecipeRoute.js":"5","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/RecipeListRoute/RecipeListRoute.js":"6","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/ResgistrationRoute/RegistrationRoute.js":"7","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/RecipeRoute/RecipeRoute.js":"8","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/history.js":"9","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/LandingRoute/LandingRoute.js":"10","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/LoginForm/LoginForm.js":"11","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/Header/Header.js":"12","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RegistrationForm/RegistrationForm.js":"13","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/auth-api-services.js":"14","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/config.js":"15","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/token-services.js":"16","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/recipe-services.js":"17","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/PrivateRoute/PrivateRoute.js":"18","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeList/RecipeList.js":"19","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipePage/Recipe.js":"20","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/instructions-service.js":"21","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/InstructionBlock/InstructionBlock.js":"22","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/ingredients-services.js":"23","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/IngredientBlock/IngredientBlock.js":"24","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/tags-service.js":"25","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/recipe_tags-service.js":"26","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeTags/RecipeTags.js":"27","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditRecipe/EditRecipe.js":"28","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/TestRecipeRoute/TestRecipeRoute.js":"29","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditIngredientRoute/EditIngredientRoute.js":"30","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditIngredient/EditIngredient.js":"31","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditInstruction/EditInstruction.js":"32","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditInstructionRoute/EditInstructionRoute.js":"33","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditTitleRoute/EditTitleRoute.js":"34","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditTitle/EditTitle.js":"35"},{"size":263,"mtime":1609968175820,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1609958425581,"results":"38","hashOfConfig":"37"},{"size":1808,"mtime":1610311333403,"results":"39","hashOfConfig":"37"},{"size":230,"mtime":1609960068912,"results":"40","hashOfConfig":"37"},{"size":234,"mtime":1609960004272,"results":"41","hashOfConfig":"37"},{"size":2609,"mtime":1610313059422,"results":"42","hashOfConfig":"37"},{"size":638,"mtime":1609973354050,"results":"43","hashOfConfig":"37"},{"size":1929,"mtime":1610047448159,"results":"44","hashOfConfig":"37"},{"size":87,"mtime":1609960239738,"results":"45","hashOfConfig":"37"},{"size":1491,"mtime":1610310985690,"results":"46","hashOfConfig":"37"},{"size":2124,"mtime":1610045850864,"results":"47","hashOfConfig":"37"},{"size":1973,"mtime":1610309959431,"results":"48","hashOfConfig":"37"},{"size":2424,"mtime":1610312039600,"results":"49","hashOfConfig":"37"},{"size":437,"mtime":1609969450839,"results":"50","hashOfConfig":"37"},{"size":176,"mtime":1609969175972,"results":"51","hashOfConfig":"37"},{"size":495,"mtime":1609969453830,"results":"52","hashOfConfig":"37"},{"size":1343,"mtime":1610137349992,"results":"53","hashOfConfig":"37"},{"size":461,"mtime":1610039988676,"results":"54","hashOfConfig":"37"},{"size":401,"mtime":1610313700493,"results":"55","hashOfConfig":"37"},{"size":3172,"mtime":1610297671349,"results":"56","hashOfConfig":"37"},{"size":1033,"mtime":1610239670194,"results":"57","hashOfConfig":"37"},{"size":419,"mtime":1610297405533,"results":"58","hashOfConfig":"37"},{"size":491,"mtime":1610038048837,"results":"59","hashOfConfig":"37"},{"size":576,"mtime":1610293779705,"results":"60","hashOfConfig":"37"},{"size":463,"mtime":1610039227967,"results":"61","hashOfConfig":"37"},{"size":896,"mtime":1610120965918,"results":"62","hashOfConfig":"37"},{"size":772,"mtime":1610124610813,"results":"63","hashOfConfig":"37"},{"size":5495,"mtime":1610231578712,"results":"64","hashOfConfig":"37"},{"size":1902,"mtime":1610237983731,"results":"65","hashOfConfig":"37"},{"size":1839,"mtime":1610294573652,"results":"66","hashOfConfig":"37"},{"size":2716,"mtime":1610296325202,"results":"67","hashOfConfig":"37"},{"size":1930,"mtime":1610296956874,"results":"68","hashOfConfig":"37"},{"size":1981,"mtime":1610297183591,"results":"69","hashOfConfig":"37"},{"size":722,"mtime":1610297792966,"results":"70","hashOfConfig":"37"},{"size":1950,"mtime":1610301095745,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1oc7hha",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"74"},"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/index.js",[],["150","151"],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/reportWebVitals.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/App.js",["152"],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/NotFoundRoute/NotFoundRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/AddRecipe/AddRecipeRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/RecipeListRoute/RecipeListRoute.js",["153"],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/ResgistrationRoute/RegistrationRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/RecipeRoute/RecipeRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/history.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/LandingRoute/LandingRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/LoginForm/LoginForm.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/Header/Header.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RegistrationForm/RegistrationForm.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/auth-api-services.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/config.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/token-services.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/recipe-services.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/PrivateRoute/PrivateRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeList/RecipeList.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipePage/Recipe.js",["154","155","156","157","158","159"],"import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport InstructionBlock from \"../InstructionBlock/InstructionBlock\";\nimport IngredientBlock from \"../IngredientBlock/IngredientBlock\";\nimport RecipeTags from \"../RecipeTags/RecipeTags\";\nimport \"./Recipe.css\";\n\nexport default class Recipe extends Component {\n  state = {\n    instructions: [],\n    recipe: this.props.recipeId,\n  };\n\n  handleDeleteRecipe = (event) => {\n    event.preventDefault();\n    console.log(\"clicked\");\n    const recipe_id = this.props.recipeId;\n    this.findInstructions();\n    console.log(this.props);\n  };\n\n  findInstructions = () => {\n    const id = this.props.recipeId;\n    const instructions = this.props.instructions.filter(\n      (instruction) => instruction.recipe_id == id\n    );\n    const instructionId = instructions.find(\n      (instruction) => instruction.recipe_id == id\n    );\n    console.log(instructionId, \"i\");\n    this.setState({ instructions });\n  };\n\n  setInstructionId = (instructionId) => {\n    this.setState({ instructionId });\n  };\n\n  render() {\n    const recipes = this.props.recipes;\n    const instructions = this.props.instructions;\n    const ingredients = this.props.ingredients;\n    const id = this.props.recipeId;\n    const findRecipe = recipes && recipes.find((recipe) => recipe.id == id);\n    const findInstructions =\n      instructions &&\n      instructions.filter((instruction) => instruction.recipe_id == id);\n    const findIngredients =\n      ingredients &&\n      ingredients.filter((ingredient) => ingredient.recipe_id == id);\n\n    const getInstructions = findInstructions.map((instruction, index) => (\n      <InstructionBlock\n        key={index}\n        id={instruction.id}\n        recipe_id={instruction.recipe_id}\n        list_order={instruction.list_order}\n        step_info={instruction.step_info}\n      />\n    ));\n\n    const getIngredients = findIngredients.map((ingredient, index) => (\n      <IngredientBlock\n        key={index}\n        id={ingredient.id}\n        food_item={ingredient.food_item}\n        amount={ingredient.amount}\n        recipe_id={ingredient.recipe_id}\n        unit={ingredient.unit}\n      />\n    ));\n\n    if (!findRecipe) {\n      return \"loading\";\n    }\n\n    const formattedDate = moment\n      .utc(findRecipe.date_created)\n      .format(\"MMM Do YYYY\");\n\n    return (\n      <div>\n        <h2>{findRecipe.title}</h2>\n        <p>Created: {formattedDate}</p>\n        <div className=\"edit-button-div\">\n          <Link\n            to={`/edit-title/${this.props.recipeId}`}\n            className=\"recipe-button\"\n          >\n            Edit\n          </Link>\n        </div>\n        <div className=\"ingredients-div\">\n          <ul className=\"ingredients-list\">{getIngredients}</ul>\n        </div>\n        <div className=\"instructions-div\">\n          <ol className=\"instructions-list\">{getInstructions}</ol>\n        </div>\n        <div className=\"delete-button-div\">\n          <button className=\"recipe-button\" onClick={this.handleDeleteRecipe}>\n            Delete recipe\n          </button>\n        </div>\n        <RecipeTags id={this.props.recipeId} />\n      </div>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/instructions-service.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/InstructionBlock/InstructionBlock.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/ingredients-services.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/IngredientBlock/IngredientBlock.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/tags-service.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/recipe_tags-service.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeTags/RecipeTags.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditRecipe/EditRecipe.js",["160","161","162"],"import React, { Component, useImperativeHandle } from \"react\";\nimport RecipesService from \"../../services/recipe-services\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-services\";\nimport InstructionsService from \"../../services/instructions-service\";\nimport IngredientsService from \"../../services/ingredients-services\";\nimport \"./EditRecipe.css\";\n\nexport default class EditRecipe extends Component {\n  state = {\n    recipe: {},\n    currentInstructions: [],\n    currentIngredients: [],\n  };\n\n  titleRef = React.createRef();\n  step_infoRef = React.createRef();\n  amountRef = React.createRef()\n  unitRef = React.createRef()\n  food_itemRef = React.createRef()\n\n  setTitle = (title) => {\n    this.setState({ title });\n  };\n\n  componentDidMount = () => {\n    RecipesService.getRecipe(this.props.currentRecipeId)\n      .then((recipe) => {\n        this.setState({ recipe });\n      })\n      .then(() => {\n        InstructionsService.getInstructions().then((instructions) => {\n          const currentInstructions = instructions.filter(\n            (instruction) => instruction.recipe_id == this.props.currentRecipeId\n          );\n          this.setState({ currentInstructions });\n        });\n      })\n      .then(() => {\n        IngredientsService.getIngredients().then((ingredients) => {\n          const currentIngredients = ingredients.filter(\n            (ingredient) => ingredient.recipe_id == this.props.currentRecipeId\n          );\n          this.setState({ currentIngredients });\n        });\n      });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const recipeToSubmit = {\n      title: e.target[\"recipe-title\"].value,\n    };\n    //figure out which insrtictions need to be updated\n    //each instructions input element should have a className of \"instruction_step\"\n    //loop through all input elements that have this className\n    //for each input element compare the current info with the prev info\n    //for each changed instruction add an object of instruction_id and info to an array (changedInstructions)\n    //get id from either the input name or the data-attribute\n    //figure out which ingreiednts need to be updated\n    //repeat same but for ingredients\n    //now there are 2 arrays that need to be PATCHED on the backend\n    //for each instruction in the changedInstructions array do a fetch\n    //do same for ingredients\n    const instructionsToSubmit = {\n      step_info: e.target[\"step_info\"].value,\n    };\n    const id = this.props.currentRecipeId;\n    console.log(instructionsToSubmit.id);\n    fetch(`${config.API_ENDPOINT}/recipes/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        authorization: `bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify(recipeToSubmit),\n    })\n      .then((res) =>\n        !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n      )\n      .then(() => {\n        fetch(`${config.API_ENDPOINT}/instructions/${id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"content-type\": \"application/json\",\n            authorization: `bearer ${TokenService.getAuthToken()}`,\n          },\n          body: JSON.stringify(instructionsToSubmit),\n        }).then((res) =>\n          !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n        );\n      })\n      .then(() => {\n        this.props.history.push(`/recipe/${id}`);\n      });\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"recipe-title\">Title:</label>\n          <input\n            key={this.state.recipe.id}\n            type=\"text\"\n            name=\"recipe-title\"\n            ref={this.titleRef}\n            defaultValue={this.state.recipe.title}\n          />\n          <h3>ingredients</h3>\n          {this.state.currentIngredients.map((ingredient) => (\n            <div>\n              <label htmlFor=\"ingredients\"></label>\n              <input\n                className=\"ingredient-inputs\"\n                defaultValue={ingredient.amount}\n                name='ingredient-amount'\n                type=\"text\"\n                ref={this.amountRef}\n              />\n              <label htmlFor=\"unit\"></label>\n              <input\n                className=\"ingredient-inputs\"\n                defaultValue={ingredient.unit}\n                name='ingredient-unit'\n                type=\"text\"\n                ref={this.unitRef}\n              />\n              <label htmlFor=\"food_item\"></label>\n              <input\n                className=\"ingredient-inputs\"\n                defaultValue={ingredient.food_item}\n                name='ingredient-food_item'\n                type=\"text\"\n                ref={this.food_itemRef}\n              />\n            </div>\n          ))}\n          <h3>instructions</h3>\n          {this.state.currentInstructions.map((instruction) => (\n            <div>\n              <label htmlFor=\"instructions\">{instruction.list_order}</label>\n              <input\n                key={instruction.id}\n                defaultValue={instruction.step_info}\n                type=\"text\"\n                name={`instructions_${instruction.id}`}\n                ref={this.step_infoRef}\n                id={`instructions_${instruction.id}`}\n                data-instruction-id={instruction.id}\n              />\n            </div>\n          ))}\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/TestRecipeRoute/TestRecipeRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditIngredientRoute/EditIngredientRoute.js",["163","164","165"],"import React, { Component } from \"react\";\nimport RecipesService from \"../../services/recipe-services\";\nimport EditRecipe from \"../../components/EditRecipe/EditRecipe\";\nimport InstructionsService from \"../../services/instructions-service\";\nimport IngredientsService from \"../../services/ingredients-services\";\nimport EditIngredient from '../../components/EditIngredient/EditIngredient'\n\nexport default class EditIngredientRoute extends Component {\n  state = {\n    recipes: [],\n    instructions: [],\n    ingredients: [],\n  };\n\n  getAll() {\n    RecipesService.getRecipes().then((recipes) => {\n      this.setState({ recipes });\n    })\n    .then(() => {\n        InstructionsService.getInstructions()\n        .then((instructions) => {\n            this.setState({ instructions })\n        })\n    })\n    .then(() => {\n        IngredientsService.getIngredients()\n            .then((ingredients) => {\n                this.setState({ingredients})\n            })\n    })\n  }\n\n  getInstructions() {\n    InstructionsService.getInstructions().then((instructions) => {\n      this.setState({ instructions });\n    });\n  }\n\n  getIngredients() {\n    IngredientsService.getIngredients().then((ingredients) => {\n      this.setState({ ingredients });\n    });\n  }\n\n  componentDidMount() {\n    this.getAll();\n    // this.getInstructions();\n    // this.getIngredients();\n  }\n\n  render() {\n    const currentEditId = this.props.match.params.id;\n    const recipes = this.state.recipes;\n    const instructions = this.state.instructions;\n    const ingredients = this.state.ingredients;\n    const history = this.props.history\n    //const currentRecipe = recipes && recipes.find((recipe) => recipe.id == currentEditId)\n\n    return (\n      <div>\n          <EditIngredient  currentEditId={currentEditId} history={history} ingredients={ingredients}/>\n      </div>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditIngredient/EditIngredient.js",["166"],"import React, { Component } from \"react\";\nimport IngredientsService from \"../../services/ingredients-services\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-services\";\n\nexport default class EditIngredient extends Component {\n  state = {\n    instructionId: \"\",\n    food_item: \"\",\n    amount: \"\",\n    unit: \"\",\n    recipeId: ''\n  };\n\n  componentDidMount = () => {\n    IngredientsService.getIngredients().then((ingredients) => {\n      const currentIngredient = ingredients.find(\n        (ingredient) => ingredient.id == this.props.currentEditId\n      );\n      const instructionId = currentIngredient.id;\n      const food_item = currentIngredient.food_item;\n      const amount = currentIngredient.amount;\n      const unit = currentIngredient.unit;\n      const recipeId = currentIngredient.recipe_id\n      this.setState({ instructionId });\n      this.setState({ food_item });\n      this.setState({ amount });\n      this.setState({ unit });\n      this.setState({recipeId})\n    });\n  };\n\n  handleSubmit = (event) => {\n      event.preventDefault()\n      const id = this.state.instructionId\n      const updatedIngredients = this.state\n      fetch(`${config.API_ENDPOINT}/ingredients/${id}`, {\n          method: 'PATCH',\n          headers: {\n              'content-type': 'application/json',\n              authorization: `bearer ${TokenService.getAuthToken()}`,\n          },\n          body: JSON.stringify(updatedIngredients),\n      }).then((res) => \n          !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n      )\n      .then(() => {\n        this.props.history.push(`/recipe/${this.state.recipeId}`)\n      })\n  }\n\n  setFoodItem = (food_item) => {\n    this.setState({ food_item });\n  };\n  setAmount = (amount) => {\n    this.setState({ amount });\n  };\n  setUnit = (unit) => {\n    this.setState({ unit });\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"amount\">Amount:</label>\n          <input \n            type='text'\n            name='amount'\n            value={this.state.amount}\n            onChange={(e) => this.setAmount(e.target.value)}\n          />\n          <label htmlFor='unit'>Unit:</label>\n          <input\n            type='text'\n            name='unit'\n            value={this.state.unit}\n            onChange={(e) => this.setUnit(e.target.value)}\n          />\n          <label htmlFor='food_item'>Food:</label>\n          <input\n            type='text'\n            name='food_item'\n            value={this.state.food_item}\n            onChange={(e) => this.setFoodItem(e.target.value)}\n          />\n          <button type='submit' >Submit</button>\n      </form>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditInstruction/EditInstruction.js",["167"],"import React, { Component } from \"react\";\nimport InstructionsService from \"../../services/instructions-service\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-services\";\n\nexport default class EditInstruction extends Component {\n  state = {\n    step_info: \"\",\n    recipeId: '',\n    id: ''\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const id = this.props.currentEditId;\n    const updatedInstruction = this.state;\n    fetch(`${config.API_ENDPOINT}/instructions/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        authorization: `bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify(updatedInstruction),\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    )\n    .then(() => {\n      this.props.history.push(`/recipe/${this.state.recipeId}`)\n    })\n  };\n\n  setStepInfo = (step_info) => {\n    this.setState({ step_info });\n    console.log(this.state);\n  };\n\n  componentDidMount = () => {\n    InstructionsService.getInstructions().then((instructions) => {\n      const currentInstruction = instructions.find(\n        (instruction) => instruction.id == this.props.currentEditId\n      );\n      const step_info = currentInstruction.step_info;\n      const recipeId = currentInstruction.recipe_id\n      const id = currentInstruction.id\n      this.setState({ step_info });\n      this.setState({recipeId })\n      this.setState({ id })\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor=\"instruction\">Instruction to edit:</label>\n        <input\n          key={this.state.id}\n          type=\"text\"\n          name=\"instruction_info\"\n          value={this.state.step_info}\n          onChange={(e) => this.setStepInfo(e.target.value)}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditInstructionRoute/EditInstructionRoute.js",["168"],"import React, { Component } from \"react\";\nimport RecipesService from \"../../services/recipe-services\";\nimport EditRecipe from \"../../components/EditRecipe/EditRecipe\";\nimport InstructionsService from \"../../services/instructions-service\";\nimport IngredientsService from \"../../services/ingredients-services\";\nimport EditInstruction from '../../components/EditInstruction/EditInstruction'\n\nexport default class EditRecipeRoute extends Component {\n  state = {\n    recipes: [],\n    instructions: [],\n    ingredients: [],\n  };\n\n  getAll() {\n    RecipesService.getRecipes().then((recipes) => {\n      this.setState({ recipes });\n    })\n    .then(() => {\n        InstructionsService.getInstructions()\n        .then((instructions) => {\n            this.setState({ instructions })\n        })\n    })\n    .then(() => {\n        IngredientsService.getIngredients()\n            .then((ingredients) => {\n                this.setState({ingredients})\n            })\n    })\n  }\n\n  getInstructions() {\n    InstructionsService.getInstructions().then((instructions) => {\n      this.setState({ instructions });\n    });\n  }\n\n  getIngredients() {\n    IngredientsService.getIngredients().then((ingredients) => {\n      this.setState({ ingredients });\n    });\n  }\n\n  componentDidMount() {\n    this.getAll();\n    // this.getInstructions();\n    // this.getIngredients();\n  }\n\n  render() {\n    const currentEditId = this.props.match.params.id;\n    const recipes = this.state.recipes;\n    const instructions = this.state.instructions;\n    const ingredients = this.state.ingredients;\n    const history = this.props.history\n    //const currentRecipe = recipes && recipes.find((recipe) => recipe.id == currentEditId)\n\n    return (\n      <div>\n        <EditInstruction\n        //currentRecipe={currentRecipe}\n          currentEditId={currentEditId}\n          instructions={instructions}\n          ingredients={ingredients}\n          recipes={recipes}\n          history={history}\n        />\n      </div>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditTitleRoute/EditTitleRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditTitle/EditTitle.js",["169","170"],"import React, { Component } from \"react\";\nimport RecipesService from \"../../services/recipe-services\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-services\";\nimport PrivateRoute from \"../PrivateRoute/PrivateRoute\";\n\nexport default class EditTitle extends Component {\n\n    state= {\n        title: '',\n        id: ''\n    }\n\n    componentDidMount = () => {\n        RecipesService.getRecipes().then((recipes) => {\n            const currentRecipe = recipes.find((recipe) => recipe.id == this.props.currentEditId)\n            const title = currentRecipe.title\n            const id = currentRecipe.id\n            this.setState({title})\n            this.setState({id})\n        })\n    }\n\n    setTitle = (title) => {\n        this.setState({ title })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const id = this.state.id\n        const updatedTitle = this.state\n        console.log(updatedTitle)\n        fetch(`${config.API_ENDPOINT}/recipes/${id}`, {\n            method: \"PATCH\",\n            headers: {\n              \"content-type\": \"application/json\",\n              authorization: `bearer ${TokenService.getAuthToken()}`,\n            },\n            body: JSON.stringify(updatedTitle),\n          })\n            .then((res) =>\n              !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n            )\n            .then(() => {\n                this.props.history.push(`/recipe/${id}`);\n              });\n    }\n\n  render() {\n      console.log(this.state)\n    return (\n        <form onSubmit={this.handleSubmit}>\n            <label htmlFor=\"title\">Title:</label>\n            <input \n                key={this.state.id}\n                type='text'\n                name=\"title\"\n                value={this.state.title}\n                onChange={(e) => this.setTitle(e.target.value)}\n            />\n            <button type='submit'>Submit</button>\n        </form>\n    );\n  }\n}\n",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":11,"column":8,"nodeType":"177","messageId":"178","endLine":11,"endColumn":23},{"ruleId":"175","severity":1,"message":"179","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":22},{"ruleId":"175","severity":1,"message":"180","line":18,"column":11,"nodeType":"177","messageId":"178","endLine":18,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":26,"column":46,"nodeType":"183","messageId":"184","endLine":26,"endColumn":48},{"ruleId":"181","severity":1,"message":"182","line":29,"column":46,"nodeType":"183","messageId":"184","endLine":29,"endColumn":48},{"ruleId":"181","severity":1,"message":"182","line":44,"column":70,"nodeType":"183","messageId":"184","endLine":44,"endColumn":72},{"ruleId":"181","severity":1,"message":"182","line":47,"column":66,"nodeType":"183","messageId":"184","endLine":47,"endColumn":68},{"ruleId":"181","severity":1,"message":"182","line":50,"column":63,"nodeType":"183","messageId":"184","endLine":50,"endColumn":65},{"ruleId":"175","severity":1,"message":"185","line":1,"column":28,"nodeType":"177","messageId":"178","endLine":1,"endColumn":47},{"ruleId":"181","severity":1,"message":"182","line":34,"column":52,"nodeType":"183","messageId":"184","endLine":34,"endColumn":54},{"ruleId":"181","severity":1,"message":"182","line":42,"column":50,"nodeType":"183","messageId":"184","endLine":42,"endColumn":52},{"ruleId":"175","severity":1,"message":"186","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":18},{"ruleId":"175","severity":1,"message":"187","line":53,"column":11,"nodeType":"177","messageId":"178","endLine":53,"endColumn":18},{"ruleId":"175","severity":1,"message":"188","line":54,"column":11,"nodeType":"177","messageId":"178","endLine":54,"endColumn":23},{"ruleId":"181","severity":1,"message":"182","line":18,"column":39,"nodeType":"183","messageId":"184","endLine":18,"endColumn":41},{"ruleId":"181","severity":1,"message":"182","line":40,"column":41,"nodeType":"183","messageId":"184","endLine":40,"endColumn":43},{"ruleId":"175","severity":1,"message":"186","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":18},{"ruleId":"175","severity":1,"message":"189","line":5,"column":8,"nodeType":"177","messageId":"178","endLine":5,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":16,"column":70,"nodeType":"183","messageId":"184","endLine":16,"endColumn":72},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'TestRecipeRoute' is defined but never used.","Identifier","unusedVar","'RecipesService' is defined but never used.","'recipe_id' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useImperativeHandle' is defined but never used.","'EditRecipe' is defined but never used.","'recipes' is assigned a value but never used.","'instructions' is assigned a value but never used.","'PrivateRoute' is defined but never used.","no-global-assign","no-unsafe-negation"]