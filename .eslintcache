[{"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/index.js":"1","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/reportWebVitals.js":"2","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/App.js":"3","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/NotFoundRoute/NotFoundRoute.js":"4","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/AddRecipe/AddRecipeRoute.js":"5","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/RecipeListRoute/RecipeListRoute.js":"6","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/ResgistrationRoute/RegistrationRoute.js":"7","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/RecipeRoute/RecipeRoute.js":"8","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/history.js":"9","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/LandingRoute/LandingRoute.js":"10","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/LoginForm/LoginForm.js":"11","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/Header/Header.js":"12","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RegistrationForm/RegistrationForm.js":"13","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/auth-api-services.js":"14","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/config.js":"15","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/token-services.js":"16","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/recipe-services.js":"17","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/PrivateRoute/PrivateRoute.js":"18","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeList/RecipeList.js":"19","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/instructions-service.js":"20","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/ingredients-services.js":"21","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/tags-service.js":"22","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/recipe_tags-service.js":"23","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeTags/RecipeTags.js":"24","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditRecipe/EditRecipe.js":"25","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/TestRecipeRoute/TestRecipeRoute.js":"26","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditIngredientRoute/EditIngredientRoute.js":"27","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditIngredient/EditIngredient.js":"28","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditInstruction/EditInstruction.js":"29","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditInstructionRoute/EditInstructionRoute.js":"30","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditTitleRoute/EditTitleRoute.js":"31","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditTitle/EditTitle.js":"32","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipePage/RecipePage.js":"33","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/IngredientEditBlock/IngredientEditBlock.js":"34","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/InstructionEditBlock/InstructionEditBlock.js":"35","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/InstructionBlock/InstructionBlock.js":"36","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/IngredientBlock/IngredientBlock.js":"37","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditRecipeRoute/EditRecipeRoute.js":"38","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeEditPage/RecipeEditPage.js":"39","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/AddRecipe/AddRecipe.js":"40"},{"size":263,"mtime":1609968175820,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":1609958425581,"results":"43","hashOfConfig":"42"},{"size":1816,"mtime":1610379563792,"results":"44","hashOfConfig":"42"},{"size":230,"mtime":1609960068912,"results":"45","hashOfConfig":"42"},{"size":345,"mtime":1610391105640,"results":"46","hashOfConfig":"42"},{"size":2847,"mtime":1610390191000,"results":"47","hashOfConfig":"42"},{"size":638,"mtime":1609973354050,"results":"48","hashOfConfig":"42"},{"size":1940,"mtime":1610386109537,"results":"49","hashOfConfig":"42"},{"size":87,"mtime":1609960239738,"results":"50","hashOfConfig":"42"},{"size":1491,"mtime":1610310985690,"results":"51","hashOfConfig":"42"},{"size":2124,"mtime":1610045850864,"results":"52","hashOfConfig":"42"},{"size":1973,"mtime":1610309959431,"results":"53","hashOfConfig":"42"},{"size":2424,"mtime":1610312039600,"results":"54","hashOfConfig":"42"},{"size":437,"mtime":1609969450839,"results":"55","hashOfConfig":"42"},{"size":176,"mtime":1609969175972,"results":"56","hashOfConfig":"42"},{"size":495,"mtime":1609969453830,"results":"57","hashOfConfig":"42"},{"size":1343,"mtime":1610137349992,"results":"58","hashOfConfig":"42"},{"size":461,"mtime":1610039988676,"results":"59","hashOfConfig":"42"},{"size":402,"mtime":1610387666310,"results":"60","hashOfConfig":"42"},{"size":1033,"mtime":1610239670194,"results":"61","hashOfConfig":"42"},{"size":491,"mtime":1610038048837,"results":"62","hashOfConfig":"42"},{"size":463,"mtime":1610039227967,"results":"63","hashOfConfig":"42"},{"size":896,"mtime":1610120965918,"results":"64","hashOfConfig":"42"},{"size":792,"mtime":1610381649761,"results":"65","hashOfConfig":"42"},{"size":5495,"mtime":1610231578712,"results":"66","hashOfConfig":"42"},{"size":1914,"mtime":1610378518793,"results":"67","hashOfConfig":"42"},{"size":1780,"mtime":1610390166342,"results":"68","hashOfConfig":"42"},{"size":2716,"mtime":1610296325202,"results":"69","hashOfConfig":"42"},{"size":1930,"mtime":1610296956874,"results":"70","hashOfConfig":"42"},{"size":1916,"mtime":1610390202004,"results":"71","hashOfConfig":"42"},{"size":722,"mtime":1610297792966,"results":"72","hashOfConfig":"42"},{"size":1893,"mtime":1610390299747,"results":"73","hashOfConfig":"42"},{"size":3454,"mtime":1610475919147,"results":"74","hashOfConfig":"42"},{"size":638,"mtime":1610382345806,"results":"75","hashOfConfig":"42"},{"size":419,"mtime":1610379034722,"results":"76","hashOfConfig":"42"},{"size":201,"mtime":1610390117058,"results":"77","hashOfConfig":"42"},{"size":388,"mtime":1610390108475,"results":"78","hashOfConfig":"42"},{"size":1933,"mtime":1610379755203,"results":"79","hashOfConfig":"42"},{"size":2703,"mtime":1610390241869,"results":"80","hashOfConfig":"42"},{"size":8563,"mtime":1610470375961,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1oc7hha",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/index.js",[],["166","167"],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/reportWebVitals.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/App.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/NotFoundRoute/NotFoundRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/AddRecipe/AddRecipeRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/RecipeListRoute/RecipeListRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/ResgistrationRoute/RegistrationRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/RecipeRoute/RecipeRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/history.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/LandingRoute/LandingRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/LoginForm/LoginForm.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/Header/Header.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RegistrationForm/RegistrationForm.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/auth-api-services.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/config.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/token-services.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/recipe-services.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/PrivateRoute/PrivateRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeList/RecipeList.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/instructions-service.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/ingredients-services.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/tags-service.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/services/recipe_tags-service.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeTags/RecipeTags.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditRecipe/EditRecipe.js",["168","169","170"],"import React, { Component, useImperativeHandle } from \"react\";\nimport RecipesService from \"../../services/recipe-services\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-services\";\nimport InstructionsService from \"../../services/instructions-service\";\nimport IngredientsService from \"../../services/ingredients-services\";\nimport \"./EditRecipe.css\";\n\nexport default class EditRecipe extends Component {\n  state = {\n    recipe: {},\n    currentInstructions: [],\n    currentIngredients: [],\n  };\n\n  titleRef = React.createRef();\n  step_infoRef = React.createRef();\n  amountRef = React.createRef()\n  unitRef = React.createRef()\n  food_itemRef = React.createRef()\n\n  setTitle = (title) => {\n    this.setState({ title });\n  };\n\n  componentDidMount = () => {\n    RecipesService.getRecipe(this.props.currentRecipeId)\n      .then((recipe) => {\n        this.setState({ recipe });\n      })\n      .then(() => {\n        InstructionsService.getInstructions().then((instructions) => {\n          const currentInstructions = instructions.filter(\n            (instruction) => instruction.recipe_id == this.props.currentRecipeId\n          );\n          this.setState({ currentInstructions });\n        });\n      })\n      .then(() => {\n        IngredientsService.getIngredients().then((ingredients) => {\n          const currentIngredients = ingredients.filter(\n            (ingredient) => ingredient.recipe_id == this.props.currentRecipeId\n          );\n          this.setState({ currentIngredients });\n        });\n      });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const recipeToSubmit = {\n      title: e.target[\"recipe-title\"].value,\n    };\n    //figure out which insrtictions need to be updated\n    //each instructions input element should have a className of \"instruction_step\"\n    //loop through all input elements that have this className\n    //for each input element compare the current info with the prev info\n    //for each changed instruction add an object of instruction_id and info to an array (changedInstructions)\n    //get id from either the input name or the data-attribute\n    //figure out which ingreiednts need to be updated\n    //repeat same but for ingredients\n    //now there are 2 arrays that need to be PATCHED on the backend\n    //for each instruction in the changedInstructions array do a fetch\n    //do same for ingredients\n    const instructionsToSubmit = {\n      step_info: e.target[\"step_info\"].value,\n    };\n    const id = this.props.currentRecipeId;\n    console.log(instructionsToSubmit.id);\n    fetch(`${config.API_ENDPOINT}/recipes/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        authorization: `bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify(recipeToSubmit),\n    })\n      .then((res) =>\n        !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n      )\n      .then(() => {\n        fetch(`${config.API_ENDPOINT}/instructions/${id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"content-type\": \"application/json\",\n            authorization: `bearer ${TokenService.getAuthToken()}`,\n          },\n          body: JSON.stringify(instructionsToSubmit),\n        }).then((res) =>\n          !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n        );\n      })\n      .then(() => {\n        this.props.history.push(`/recipe/${id}`);\n      });\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"recipe-title\">Title:</label>\n          <input\n            key={this.state.recipe.id}\n            type=\"text\"\n            name=\"recipe-title\"\n            ref={this.titleRef}\n            defaultValue={this.state.recipe.title}\n          />\n          <h3>ingredients</h3>\n          {this.state.currentIngredients.map((ingredient) => (\n            <div>\n              <label htmlFor=\"ingredients\"></label>\n              <input\n                className=\"ingredient-inputs\"\n                defaultValue={ingredient.amount}\n                name='ingredient-amount'\n                type=\"text\"\n                ref={this.amountRef}\n              />\n              <label htmlFor=\"unit\"></label>\n              <input\n                className=\"ingredient-inputs\"\n                defaultValue={ingredient.unit}\n                name='ingredient-unit'\n                type=\"text\"\n                ref={this.unitRef}\n              />\n              <label htmlFor=\"food_item\"></label>\n              <input\n                className=\"ingredient-inputs\"\n                defaultValue={ingredient.food_item}\n                name='ingredient-food_item'\n                type=\"text\"\n                ref={this.food_itemRef}\n              />\n            </div>\n          ))}\n          <h3>instructions</h3>\n          {this.state.currentInstructions.map((instruction) => (\n            <div>\n              <label htmlFor=\"instructions\">{instruction.list_order}</label>\n              <input\n                key={instruction.id}\n                defaultValue={instruction.step_info}\n                type=\"text\"\n                name={`instructions_${instruction.id}`}\n                ref={this.step_infoRef}\n                id={`instructions_${instruction.id}`}\n                data-instruction-id={instruction.id}\n              />\n            </div>\n          ))}\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/TestRecipeRoute/TestRecipeRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditIngredientRoute/EditIngredientRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditIngredient/EditIngredient.js",["171"],"import React, { Component } from \"react\";\nimport IngredientsService from \"../../services/ingredients-services\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-services\";\n\nexport default class EditIngredient extends Component {\n  state = {\n    instructionId: \"\",\n    food_item: \"\",\n    amount: \"\",\n    unit: \"\",\n    recipeId: ''\n  };\n\n  componentDidMount = () => {\n    IngredientsService.getIngredients().then((ingredients) => {\n      const currentIngredient = ingredients.find(\n        (ingredient) => ingredient.id == this.props.currentEditId\n      );\n      const instructionId = currentIngredient.id;\n      const food_item = currentIngredient.food_item;\n      const amount = currentIngredient.amount;\n      const unit = currentIngredient.unit;\n      const recipeId = currentIngredient.recipe_id\n      this.setState({ instructionId });\n      this.setState({ food_item });\n      this.setState({ amount });\n      this.setState({ unit });\n      this.setState({recipeId})\n    });\n  };\n\n  handleSubmit = (event) => {\n      event.preventDefault()\n      const id = this.state.instructionId\n      const updatedIngredients = this.state\n      fetch(`${config.API_ENDPOINT}/ingredients/${id}`, {\n          method: 'PATCH',\n          headers: {\n              'content-type': 'application/json',\n              authorization: `bearer ${TokenService.getAuthToken()}`,\n          },\n          body: JSON.stringify(updatedIngredients),\n      }).then((res) => \n          !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n      )\n      .then(() => {\n        this.props.history.push(`/recipe/${this.state.recipeId}`)\n      })\n  }\n\n  setFoodItem = (food_item) => {\n    this.setState({ food_item });\n  };\n  setAmount = (amount) => {\n    this.setState({ amount });\n  };\n  setUnit = (unit) => {\n    this.setState({ unit });\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"amount\">Amount:</label>\n          <input \n            type='text'\n            name='amount'\n            value={this.state.amount}\n            onChange={(e) => this.setAmount(e.target.value)}\n          />\n          <label htmlFor='unit'>Unit:</label>\n          <input\n            type='text'\n            name='unit'\n            value={this.state.unit}\n            onChange={(e) => this.setUnit(e.target.value)}\n          />\n          <label htmlFor='food_item'>Food:</label>\n          <input\n            type='text'\n            name='food_item'\n            value={this.state.food_item}\n            onChange={(e) => this.setFoodItem(e.target.value)}\n          />\n          <button type='submit' >Submit</button>\n      </form>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditInstruction/EditInstruction.js",["172"],"import React, { Component } from \"react\";\nimport InstructionsService from \"../../services/instructions-service\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-services\";\n\nexport default class EditInstruction extends Component {\n  state = {\n    step_info: \"\",\n    recipeId: '',\n    id: ''\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const id = this.props.currentEditId;\n    const updatedInstruction = this.state;\n    fetch(`${config.API_ENDPOINT}/instructions/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        authorization: `bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify(updatedInstruction),\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    )\n    .then(() => {\n      this.props.history.push(`/recipe/${this.state.recipeId}`)\n    })\n  };\n\n  setStepInfo = (step_info) => {\n    this.setState({ step_info });\n    console.log(this.state);\n  };\n\n  componentDidMount = () => {\n    InstructionsService.getInstructions().then((instructions) => {\n      const currentInstruction = instructions.find(\n        (instruction) => instruction.id == this.props.currentEditId\n      );\n      const step_info = currentInstruction.step_info;\n      const recipeId = currentInstruction.recipe_id\n      const id = currentInstruction.id\n      this.setState({ step_info });\n      this.setState({recipeId })\n      this.setState({ id })\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor=\"instruction\">Instruction to edit:</label>\n        <input\n          key={this.state.id}\n          type=\"text\"\n          name=\"instruction_info\"\n          value={this.state.step_info}\n          onChange={(e) => this.setStepInfo(e.target.value)}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n","/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditInstructionRoute/EditInstructionRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditTitleRoute/EditTitleRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/EditTitle/EditTitle.js",["173"],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipePage/RecipePage.js",["174","175","176"],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/IngredientEditBlock/IngredientEditBlock.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/InstructionEditBlock/InstructionEditBlock.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/InstructionBlock/InstructionBlock.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/IngredientBlock/IngredientBlock.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/routes/EditRecipeRoute/EditRecipeRoute.js",[],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/RecipeEditPage/RecipeEditPage.js",["177","178","179"],"/Users/leaharden/Projects/recipe-box-capstone/recipe-box-client/src/components/AddRecipe/AddRecipe.js",["180","181","182"],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":1,"column":28,"nodeType":"189","messageId":"190","endLine":1,"endColumn":47},{"ruleId":"191","severity":1,"message":"192","line":34,"column":52,"nodeType":"193","messageId":"194","endLine":34,"endColumn":54},{"ruleId":"191","severity":1,"message":"192","line":42,"column":50,"nodeType":"193","messageId":"194","endLine":42,"endColumn":52},{"ruleId":"191","severity":1,"message":"192","line":18,"column":39,"nodeType":"193","messageId":"194","endLine":18,"endColumn":41},{"ruleId":"191","severity":1,"message":"192","line":40,"column":41,"nodeType":"193","messageId":"194","endLine":40,"endColumn":43},{"ruleId":"191","severity":1,"message":"192","line":15,"column":70,"nodeType":"193","messageId":"194","endLine":15,"endColumn":72},{"ruleId":"191","severity":1,"message":"192","line":37,"column":70,"nodeType":"193","messageId":"194","endLine":37,"endColumn":72},{"ruleId":"191","severity":1,"message":"192","line":40,"column":66,"nodeType":"193","messageId":"194","endLine":40,"endColumn":68},{"ruleId":"191","severity":1,"message":"192","line":44,"column":63,"nodeType":"193","messageId":"194","endLine":44,"endColumn":65},{"ruleId":"191","severity":1,"message":"192","line":15,"column":70,"nodeType":"193","messageId":"194","endLine":15,"endColumn":72},{"ruleId":"191","severity":1,"message":"192","line":18,"column":66,"nodeType":"193","messageId":"194","endLine":18,"endColumn":68},{"ruleId":"191","severity":1,"message":"192","line":21,"column":63,"nodeType":"193","messageId":"194","endLine":21,"endColumn":65},{"ruleId":"195","severity":1,"message":"196","line":54,"column":41,"nodeType":"197","messageId":"198","endLine":54,"endColumn":43},{"ruleId":"195","severity":1,"message":"196","line":71,"column":47,"nodeType":"197","messageId":"198","endLine":71,"endColumn":49},{"ruleId":"195","severity":1,"message":"196","line":90,"column":31,"nodeType":"197","messageId":"198","endLine":90,"endColumn":33},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'useImperativeHandle' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]